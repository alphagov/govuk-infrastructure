# USAGE
# -----
#
# on:
#   workflow_dispatch: {}
#   push:
#     branches:
#       - main
#   pull_request:
#
# jobs:
#   test:
#     uses: alphagov/govuk-infrastructure/.github/workflows/test-rails.yaml@main
#     with:
#       requiresJavaScript: true
#       requiresMongoDB: true
#       requiresRedis: true
#       requiresMySQL: true
#       mysqlUsername: "test"
#       mysqlPassword: "password"


# REUSABLE WORKFLOW
# -----------------
name: CI

on:
  workflow_call:
    inputs:
      requiresJavaScript:
        description: 'Install Node, Yarn and JavaScript dependencies'
        required: false
        default: false
        type: boolean
      requiresMongoDB:
        description: 'Run MongoDB'
        required: false
        default: false
        type: boolean
      requiresElasticsearch:
        description: 'Run Elasticsearch'
        required: false
        default: false
        type: boolean
      requiresRedis:
        description: 'Run Redis'
        required: false
        default: false
        type: boolean
      requiresMySQL:
        description: 'Run MySQL'
        required: false
        default: false
        type: boolean
      mysqlUsername:
        description: 'Username for the MySQL database'
        required: false
        type: string
      mysqlPassword:
        description: 'Password for the MySQL database'
        required: false
        type: string
      extraSystemDependencies:
        description: 'Install additional system dependencies'
        required: false
        default: ''
        type: string
      runBrakeman:
        description: 'Run Brakeman'
        required: false
        default: true
        type: boolean

jobs:
  test:
     name: Test
     runs-on: ubuntu-latest
     env:
       RAILS_ENV: test
       GOVUK_CONTENT_SCHEMAS_PATH: vendor/govuk-content-schemas
     steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Checkout GOV.UK Content Schemas
         uses: actions/checkout@v3
         with:
           repository: alphagov/govuk-content-schemas
           ref: deployed-to-production
           path: vendor/govuk-content-schemas

       - name: Install additional system dependencies
         if: ${{ inputs.extraSystemDependencies }}
         run: |
           sudo apt-get update
           sudo apt-get install -y --no-install-recommends ${{ inputs.extraSystemDependencies }}

       - name: Setup Ruby
         uses: ruby/setup-ruby@v1
         with:
           bundler-cache: true

       - name: Setup Node
         if: ${{ inputs.requiresJavaScript}}
         uses: actions/setup-node@v3
         with:
           cache: 'yarn'

       - name: Install JavaScript dependencies
         if: ${{ inputs.requiresJavaScript}}
         run: yarn install --frozen-lockfile

       - name: Run Brakeman
         if: inputs.runBrakeman
         run: bundle exec brakeman . --except CheckRenderInline

       - name: Setup MongoDB
         if: ${{ inputs.requiresMongoDB }}
         uses: supercharge/mongodb-github-action@1.7.0
         with:
           mongodb-version: 2.6

       - name: Configure sysctl limits
         if: ${{ inputs.requiresElasticsearch }}
         run: |
           sudo swapoff -a
           sudo sysctl -w vm.swappiness=1
           sudo sysctl -w fs.file-max=262144
           sudo sysctl -w vm.max_map_count=262144

       - name: Setup Elasticsearch
         if: ${{ inputs.requiresElasticsearch }}
         uses: elastic/elastic-github-actions/elasticsearch@562b8b6ae4677da97273ff6bc4d630ce96ecbaa5
         with:
           stack-version: 6.7.0

       - name: Setup Redis
         if: ${{ inputs.requiresRedis }}
         uses: supercharge/redis-github-action@1.4.0
         with:
           redis-version: 6.0

       - name: Setup MySQL
         id: setup-mysql
         if: ${{ inputs.requiresMySQL }}
         env:
           MYSQL_USERNAME: ${{ inputs.mysqlUsername }}
           MYSQL_PASSWORD: ${{ inputs.mysqlPassword }}
           MYSQL_PORT: 3306
         run: |
           # Stop the MySQL service running on the runner node
           sudo service mysql stop

           docker run --name mysql --publish "${MYSQL_PORT}:3306" --detach --env MYSQL_ALLOW_EMPTY_PASSWORD=true mysql:8.0

           # Wait for MySQL to be ready to accept connections
           sleep 15

           # Create user for running tests
           MYSQL_COMMAND="mysql -h 127.0.0.1 -P ${MYSQL_PORT} -u root"

           $MYSQL_COMMAND -e "CREATE USER '${MYSQL_USERNAME}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';"
           $MYSQL_COMMAND -e "GRANT ALL PRIVILEGES ON *.* TO '${MYSQL_USERNAME}'@'%' WITH GRANT OPTION;"
           $MYSQL_COMMAND -e "FLUSH PRIVILEGES;"

           echo "::set-output name=db-url::mysql2://${MYSQL_USERNAME}:${MYSQL_PASSWORD}@127.0.0.1:3306"

       - name: Setup Rails database
         if: ${{ inputs.requiresMySQL || inputs.requiresMongoDB }}
         env:
           TEST_DATABASE_URL: ${{ steps.setup-mysql.outputs.db-url }}
         run: bundle exec rails db:setup

       - name: Run tests
         env:
           TEST_DATABASE_URL: ${{ steps.setup-mysql.outputs.db-url }}
         run: bundle exec rake
