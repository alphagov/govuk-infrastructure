# USAGE
# -----
#
# on:
#   workflow_dispatch: {}
#   push:
#     branches:
#       - main
#     paths-ignore:
#       - "Jenkinsfile"
#       - ".git**"
#
# jobs:
#   ci:
#     uses: alphagov/govuk-infrastructure/.github/workflows/ci.yaml@main


# REUSABLE WORKFLOW
# -----------------
name: CI

on:
  workflow_call:
    inputs:
      databaseUrl:
        description: 'The database url'
        required: false
        type: string
      mysqlUser:
        description: 'The username for the MySQL database'
        required: false
        type: string
      mysqlPassword:
        description: 'The password for the MySQL database'
        required: false
        type: string
      requiresMongoDB:
        description: 'Run MongoDB'
        required: false
        default: false
        type: boolean
      requiresRedis:
        description: 'Run Redis'
        required: false
        default: false
        type: boolean
      jsDependencies:
        description: 'Install node, yarn and js dependencies'
        required: false
        default: true
        type: boolean

jobs:
  test:
     name: Test
     runs-on: ubuntu-latest
     env:
       RAILS_ENV: test
       GOVUK_CONTENT_SCHEMAS_PATH: vendor/govuk-content-schemas
     steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Checkout GOV.UK Content Schemas
         uses: actions/checkout@v3
         with:
           repository: alphagov/govuk-content-schemas
           ref: deployed-to-production
           path: vendor/govuk-content-schemas

       - name: Setup Ruby
         uses: ruby/setup-ruby@v1
         with:
           bundler-cache: true

       - name: Setup Node
         if: ${{ inputs.jsDependencies }}
         uses: actions/setup-node@v3
         with:
           cache: 'yarn'

       - name: Install JavaScript dependencies
         if: ${{ inputs.jsDependencies }}
         run: yarn install --frozen-lockfile

       - name: Run Brakeman
         run: bundle exec brakeman . --except CheckRenderInline

       - name: Start MongoDB
         if: ${{ inputs.requiresMongoDB }}
         uses: supercharge/mongodb-github-action@1.7.0
         with:
           mongodb-version: 2.6

       - name: Start Redis
         if: ${{ inputs.requiresRedis }}
         uses: supercharge/redis-github-action@1.4.0
         with:
           redis-version: 6.0

       - name: Start MySQL
         if: ${{ inputs.mysqlUser && inputs.mysqlPassword }}
         env:
           USERNAME: ${{ inputs.mysqlUser }}
           PASSWORD: ${{ inputs.mysqlPassword }}
           MYSQL_COMMAND: "mysql -h 127.0.0.1 -P 3306 -u root"
         run: |
           sudo service mysql stop
           docker run -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:8.0
           sleep 10
           $MYSQL_COMMAND -e "CREATE USER '${USERNAME}'@'%' IDENTIFIED BY '${PASSWORD}';"
           $MYSQL_COMMAND -e "GRANT ALL PRIVILEGES ON *.* TO '${USERNAME}'@'%' WITH GRANT OPTION;"
           $MYSQL_COMMAND -e "FLUSH PRIVILEGES;"

       - name: Configure database
         if: ${{ (inputs.mysqlUser && inputs.mysqlPassword) || inputs.requiresMongoDB }}
         env:
           TEST_DATABASE_URL: ${{ inputs.databaseUrl }}
         run: bundle exec rails db:setup

       - name: Run tests
         env:
           TEST_DATABASE_URL: ${{ inputs.databaseUrl }}
         run: bundle exec rake
