name: Build and push image

on:
  workflow_call:
    inputs:
      ecrRepositoryName:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      dockerfilePath:
        required: false
        type: string
        default: Dockerfile
      buildArgs:
        required: false
        type: string
      gitRef:
        required: false
        type: string
        default: ${{ github.sha }}
    outputs:
      imageTag:
        description: "The image tag for the built image"
        value: ${{ jobs.build-and-push-image.outputs.imageTag }}

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    outputs:
      imageTag: ${{ steps.meta.outputs.version }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.gitRef }}
          show-progress: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::172025368201:role/github_action_ecr_push_${{ github.event.repository.name }}
          aws-region: eu-west-1
          role-session-name: ecr-push-${{ github.event.repository.name }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
        id: local-head

      - name: Determine image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecrRepositoryName }}
          tags: |
            type=raw,priority=500,value=${{ inputs.gitRef }},enable=${{ startsWith(inputs.gitRef, 'v') }}
            type=raw,priority=400,value=${{ steps.local-head.outputs.sha }},enable=${{ !startsWith(inputs.gitRef, 'v') }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfilepath }}
          build-args: ${{ inputs.buildArgs }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
