name: linting
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ruby/setup-ruby@v1
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5
          terraform_wrapper: false

      - name: Set up Helm
        uses: azure/setup-helm@v1.1
        with:
          version: 3.*

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      - name: get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"

      - name: cache terraform plugins
        uses: actions/cache@v2
        env:
          cache-name: cache-terraform-plugins
        with:
          path: ~/.terraform/plugin-cache
          key:
            ${{ env.cache-name }}-${{ steps.get-date.outputs.date }}-${{ hashFiles('terraform/deployments/**/main.tf', 'terraform/deployments/**/.terraform.lock.hcl', 'terraform/deployments/**/versions.tf') }}

      - name: terraform fmt
        working-directory: terraform
        run: |
          if ! terraform fmt -write=false -diff=true -list=true -recursive -check .
          then
            >&2 echo "Some terraform files weren't formatted correctly. Run 'terraform fmt' to fix them."
            exit 1
          fi

      - name: rspec
        run: |
          bundle install
          rspec

      - name: rubocop
        run: |
          bundle install
          rubocop

      - name: terraform validate
        working-directory: terraform
        env:
          TF_IN_AUTOMATION: true
        run: |
          export TF_PLUGIN_CACHE_DIR=~/.terraform/plugin-cache
          mkdir -p "$TF_PLUGIN_CACHE_DIR"

          shopt -s globstar

          for f in deployments/**/main.tf; do
            d=$(dirname "$f")
            (
              echo "$d"
              cd "$d"
              terraform init -backend=false
              terraform validate
              echo -e '\n-------------------------\n'
            )
          done

      - name: run tflint
        env:
          TFLINT_VERSION: v0.24.1
        run: |
          TEMP_PATH="$(mktemp -d)"
          PATH="${TEMP_PATH}:$PATH"
          curl --silent --fail -L "https://github.com/terraform-linters/tflint/releases/download/${TFLINT_VERSION}/tflint_linux_amd64.zip" -o tflint.zip && unzip tflint.zip -d "${TEMP_PATH}" && rm tflint.zip

          for f in terraform/deployments/*/.tflint.hcl; do
            d=$(dirname "$f")
            (
              echo "$d"
              cd "$d"
              terraform init -backend=false
              tflint --module .
              echo -e '\n-------------------------\n'
            )
          done

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yml
