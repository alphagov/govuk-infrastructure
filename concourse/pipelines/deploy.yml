---
display:
  background_image: ((background_image))

definitions:

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest # TODO - don't use latest (once we've worked out a policy for third party images)
      username: ((docker_hub_username))
      password: ((docker_hub_authtoken))

  - name: s3
    type: docker-image
    source:
      repository: governmentpaas/s3-resource
      tag: latest # TODO - don't use latest (once we've worked out a policy for third party images)

  - name: registry-image
    type: docker-image
    source:
      repository: concourse/registry-image-resource
      tag: 1.2.1
      username: ((docker_hub_username))
      password: ((docker_hub_authtoken))

  - name: cron-resource
    type: docker-image
    source:
      repository: cftoolsmiths/cron-resource
      tag: latest
      username: ((docker_hub_username))
      password: ((docker_hub_authtoken))

resources:
  - &git-repo
    icon: github
    name: govuk-infrastructure
    source: &govuk-infrastructure-source
      branch: ((govuk_infrastructure_branch))
      uri: https://github.com/alphagov/govuk-infrastructure
    type: git

  - name: publishing-api-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/publishing-api.json
      initial_version: "0"

  - <<: *git-repo
    name: govuk-infrastructure-concourse-tasks
    icon: concourse-ci
    source:
      <<: *govuk-infrastructure-source
      paths: [ concourse/tasks, lib/signon, lib/tasks/secretsmanager.rake, lib/tasks/bootstrap.rake ]

  - name: smokey-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/smokey.json
      initial_version: "0"

  - name: deploy-slack-channel
    type: slack-notification
    icon: bell-ring
    source:
      url: https://hooks.slack.com/services/((deploy_apps_slack_webhook))
      disable: ((disable_slack_channel_alerts))

  - name: govuk-terraform-outputs
    type: s3
    icon: file
    # NOTE: this bucket is created for us by Big Concourse
    # https://reliability-engineering.cloudapps.digital/continuous-deployment.html#services
    # It's in AWS' London region (eu-west-2)
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/govuk-terraform-outputs.json

  - name: content-store-terraform-outputs
    type: s3
    icon: file
    # NOTE: this bucket is created for us by Big Concourse
    # https://reliability-engineering.cloudapps.digital/continuous-deployment.html#services
    # It's in AWS' London region (eu-west-2)
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/content-store.json
      initial_version: "0"

  - name: frontend-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/frontend.json
      initial_version: "0"

  - name: publisher-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/publisher.json
      initial_version: "0"

  - name: signon-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/signon.json
      initial_version: "0"

  - name: static-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/static.json
      initial_version: "0"

  - name: router-api-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/router-api.json
      initial_version: "0"

  - name: router-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/router.json
      initial_version: "0"

  - name: authenticating-proxy-terraform-outputs
    type: s3
    icon: file
    source:
      bucket: ((readonly_private_bucket_name))
      region_name: eu-west-2
      versioned_file: ((workspace))/authenticating-proxy.json
      initial_version: "0"

  - &registry-image
    name: frontend-image
    type: registry-image
    icon: docker
    source: &registry-source
      repository: frontend
      aws_role_arn: arn:aws:iam::172025368201:role/pull_images_from_ecr_role
      aws_region: eu-west-1
      aws_access_key_id: ((concourse-ecr-readonly-user_aws-access-key))
      aws_secret_access_key: ((concourse-ecr-readonly-user_aws-secret-access-key))
      aws_ecr_registry_id: "172025368201"
      variant: release

  - <<: *registry-image
    name: static-image
    source:
      <<: *registry-source
      repository: static

  - <<: *registry-image
    name: publisher-image
    source:
      <<: *registry-source
      repository: publisher

  - <<: *registry-image
    name: publishing-api-image
    source:
      <<: *registry-source
      repository: publishing-api
      tag: bilbof_dockerfile-fix # TODO - remove this once content-store supports content-schemas

  - <<: *registry-image
    name: content-store-image
    source:
      <<: *registry-source
      repository: content-store
      tag: bill-content-schemas # TODO - remove this once content-store supports content-schemas

  - <<: *registry-image
    name: router-image
    source:
      <<: *registry-source
      repository: router

  - <<: *registry-image
    name: router-api-image
    source:
      <<: *registry-source
      repository: router-api

  - <<: *registry-image
    name: signon-image
    source:
      <<: *registry-source
      repository: signon

  - <<: *registry-image
    name: authenticating-proxy-image
    source:
      <<: *registry-source
      repository: authenticating-proxy

  - <<: *registry-image
    name: smokey-image
    source:
      <<: *registry-source
      repository: smokey

  - name: everyday-at-11pm
    type: cron-resource
    source:
      expression: "0 23 * * 1-5"
      location: "Europe/London"

  - name: everyday-at-6am
    type: cron-resource
    source:
      expression: "0 06 * * 1-5"
      location: "Europe/London"
      fire_immediately: true

  - name: every-10-minutes-in-daytime
    type: cron-resource
    source:
      expression: "*/10 8-20 * * 1-5"
      location: "Europe/London"
      fire_immediately: true

groups:
  - name: all
    jobs:
      - update-pipeline
      - run-terraform
      - deploy-content-store
      - deploy-frontend
      - destroy-infrastructure
      - deploy-publisher
      - deploy-publishing-api
      - deploy-router
      - deploy-router-api
      - deploy-signon
      - deploy-smokey
      - deploy-static
      - deploy-authenticating-proxy
      - all-smoke-tests
      - smoke-test-frontend
      - smoke-test-publisher
      - smoke-test-signon

  - name: terraform
    jobs:
      - destroy-infrastructure
      - run-terraform

  - name: admin
    jobs:
      - update-pipeline

  - name: frontend
    jobs:
      - deploy-frontend
      - smoke-test-frontend

  - name: publisher
    jobs:
      - deploy-publisher
      - smoke-test-publisher

  - name: publishing-api
    jobs:
      - deploy-publishing-api

  - name: router
    jobs:
      - deploy-router

  - name: router-api
    jobs:
      - deploy-router-api

  - name: signon
    jobs:
      - deploy-signon
      - smoke-test-signon

  - name: smokey
    jobs:
      - deploy-smokey
      - all-smoke-tests
      - smoke-test-frontend
      - smoke-test-publisher
      - smoke-test-signon

  - name: static
    jobs:
      - deploy-static

  - name: authenticating-proxy
    jobs:
      - deploy-authenticating-proxy

jobs:
  - name: destroy-infrastructure
    plan:
    - get: everyday-at-11pm
      trigger: true
    - get: govuk-infrastructure
      trigger: false
    - task: destroy-terraform
      attempts: 3
      config:
        inputs:
        - name: govuk-infrastructure
        params:
          AWS_REGION: eu-west-1
          ASSUME_ROLE_ARN: 'arn:aws:iam::430354129336:role/govuk-concourse-deployer'
          WORKSPACE: ((workspace))
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: hashicorp/terraform
            tag: 0.14.6
            username: ((docker_hub_username))
            password: ((docker_hub_authtoken))
        run:
          path: sh
          args:
            - '-c'
            - |
              set -eu

              root_dir=$(pwd)

              cd govuk-infrastructure/terraform/deployments/govuk-publishing-platform

              terraform init -backend-config=./test.backend -backend-config "role_arn=$ASSUME_ROLE_ARN"

              terraform workspace select "$WORKSPACE"

              terraform destroy  \
              -var "assume_role_arn=$ASSUME_ROLE_ARN" \
              -var-file ../variables/common.tfvars \
              -var-file ../variables/test/common.tfvars \
              -var-file ../variables/test/infrastructure.tfvars \
              -auto-approve

  - name: update-pipeline
    plan:
    - get: govuk-infrastructure
      trigger: true
    - file: govuk-infrastructure/concourse/pipelines/deploy.yml
      set_pipeline: self
      var_files:
        - govuk-infrastructure/concourse/parameters/((govuk_environment))/((workspace)).yml

  - name: run-terraform
    serial: true
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        passed:
        - update-pipeline
        trigger: true
      - get: everyday-at-6am
        trigger: true
      - get: content-store-terraform-outputs
      - get: publisher-terraform-outputs
      - get: publishing-api-terraform-outputs
      - get: signon-terraform-outputs
      - get: smokey-terraform-outputs
      - get: static-terraform-outputs
      - get: router-api-terraform-outputs
      - get: router-terraform-outputs
      - get: frontend-terraform-outputs
      - get: authenticating-proxy-terraform-outputs
    - task: terraform-apply
      config:
        inputs:
        - name: govuk-infrastructure
        - name: content-store-terraform-outputs
          path: old-content-store-terraform-outputs
          optional: true
        - name: frontend-terraform-outputs
          path: old-frontend-terraform-outputs
          optional: true
        - name: publisher-terraform-outputs
          path: old-publisher-terraform-outputs
          optional: true
        - name: publishing-api-terraform-outputs
          path: old-publishing-api-terraform-outputs
          optional: true
        - name: signon-terraform-outputs
          path: old-signon-terraform-outputs
          optional: true
        - name: smokey-terraform-outputs
          path: old-smokey-terraform-outputs
          optional: true
        - name: static-terraform-outputs
          path: old-static-terraform-outputs
          optional: true
        - name: router-api-terraform-outputs
          path: old-router-api-terraform-outputs
          optional: true
        - name: router-terraform-outputs
          path: old-router-terraform-outputs
          optional: true
        - name: authenticating-proxy-terraform-outputs
          path: old-authenticating-proxy-terraform-outputs
        outputs:
        - name: govuk-terraform-outputs
        - name: content-store-terraform-outputs
          path: new-content-store-terraform-outputs
        - name: frontend-terraform-outputs
          path: new-frontend-terraform-outputs
        - name: publisher-terraform-outputs
          path: new-publisher-terraform-outputs
        - name: publishing-api-terraform-outputs
          path: new-publishing-api-terraform-outputs
        - name: signon-terraform-outputs
          path: new-signon-terraform-outputs
        - name: smokey-terraform-outputs
          path: new-smokey-terraform-outputs
        - name: static-terraform-outputs
          path: new-static-terraform-outputs
        - name: router-api-terraform-outputs
          path: new-router-api-terraform-outputs
        - name: router-terraform-outputs
          path: new-router-terraform-outputs
        - name: authenticating-proxy-terraform-outputs
          path: new-authenticating-proxy-terraform-outputs
          optional: true
        params:
          AWS_REGION: eu-west-1
          ASSUME_ROLE_ARN: 'arn:aws:iam::430354129336:role/govuk-concourse-deployer'
          WORKSPACE: ((workspace))
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: hashicorp/terraform
            tag: 0.14.6
            username: ((docker_hub_username))
            password: ((docker_hub_authtoken))
        run:
          path: sh
          args:
          - '-c'
          - |
            set -eu

            root_dir=$(pwd)

            cd govuk-infrastructure/terraform/deployments/govuk-publishing-platform

            terraform init -backend-config=./test.backend -backend-config "role_arn=$ASSUME_ROLE_ARN"

            terraform workspace select "$WORKSPACE" || terraform workspace new "$WORKSPACE"

            terraform apply \
              -var "assume_role_arn=$ASSUME_ROLE_ARN" \
              -var-file ../variables/common.tfvars \
              -var-file ../variables/test/common.tfvars \
              -var-file ../variables/test/infrastructure.tfvars \
              -auto-approve

            terraform output -json > "$root_dir/govuk-terraform-outputs/govuk-terraform-outputs.json"

            update_terraform_outputs() {
              app="$1"
              terraform output -json "${app}" > "$root_dir/new-${app}-terraform-outputs/${app}.json"

              if cmp \
                "$root_dir/old-${app}-terraform-outputs/${app}.json" \
                "$root_dir/new-${app}-terraform-outputs/${app}.json"
              then
                # If the new terraform outputs are the same as the old ones
                # delete them to avoid unnecessarily creating a new resource version
                rm "$root_dir/new-${app}-terraform-outputs/${app}.json"
              fi
            }

            update_terraform_outputs content-store
            update_terraform_outputs frontend
            update_terraform_outputs publisher
            update_terraform_outputs publishing-api
            update_terraform_outputs signon
            update_terraform_outputs smokey
            update_terraform_outputs static
            update_terraform_outputs router-api
            update_terraform_outputs router
            update_terraform_outputs authenticating-proxy

    - in_parallel:
      - put: govuk-terraform-outputs
        params:
          file: govuk-terraform-outputs/govuk-terraform-outputs.json
      - try:
          put: content-store-terraform-outputs
          params:
            file: content-store-terraform-outputs/content-store.json
      - try:
          put: frontend-terraform-outputs
          params:
            file: frontend-terraform-outputs/frontend.json
      - try:
          put: publisher-terraform-outputs
          params:
            file: publisher-terraform-outputs/publisher.json
      - try:
          put: publishing-api-terraform-outputs
          params:
            file: publishing-api-terraform-outputs/publishing-api.json
      - try:
          put: signon-terraform-outputs
          params:
            file: signon-terraform-outputs/signon.json
      - try:
          put: smokey-terraform-outputs
          params:
            file: smokey-terraform-outputs/smokey.json
      - try:
          put: static-terraform-outputs
          params:
            file: static-terraform-outputs/static.json
      - try:
          put: router-api-terraform-outputs
          params:
            file: router-api-terraform-outputs/router-api.json
      - try:
          put: router-terraform-outputs
          params:
            file: router-terraform-outputs/router.json
      - try:
          put: authenticating-proxy-terraform-outputs
          params:
            file: authenticating-proxy-terraform-outputs/authenticating-proxy.json
    on_failure: &notify-slack-failure
      put: deploy-slack-channel
      params:
        channel: "#govuk-deploy-alerts" # TODO: Alert owner Slack channels in future, i.e. ((search_team_slack))
        username: 'test-((workspace)) deploy-apps' # TODO: Change `test` to ((govuk_enviroment))
        icon_emoji: ':concourse:'
        silent: true
        text: |
          :red_circle: Failed build: http://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  - name: all-smoke-tests
    plan:
    - in_parallel:
      - get: every-10-minutes-in-daytime
        trigger: true
      - &get-smokey-govuk-infrastructure
        get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - &get-smokey-app-tf-outputs
        get: app-terraform-outputs
        resource: smokey-terraform-outputs
        passed: [deploy-smokey]
    - &get-smokey-task-definition
      task: fetch-smokey-task-definition
      file: govuk-infrastructure/concourse/tasks/fetch-task-definition.yml
      params:
        APPLICATION: smokey
    - &run-smoke-test
      task: run-smoke-tests
      file: govuk-infrastructure/concourse/tasks/run-task.yml
      params: &smoke-tests-params
        APPLICATION: smokey
        VARIANT: default
        COMMAND: bundle exec cucumber --profile test --strict-undefined -t @replatforming -t \"not @notreplatforming\"
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-frontend
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: frontend-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: frontend-image
        trigger: true
    - in_parallel:
      - task: bootstrap-secrets
        file: govuk-infrastructure/concourse/tasks/bootstrap-app-secrets.yml
        params:
          APPLICATION: frontend
          VARIANT: live
      - task: upload-rails-assets
        file: govuk-infrastructure/concourse/tasks/upload-rails-assets.yml
        input_mapping:
          app-image: frontend-image
        params:
          IMAGE_ASSETS_PATH: app-image/rootfs/app/public/assets/frontend
          S3_BUCKET_PATH_PATTERN: s3://govuk-test-%s-frontends-rails-assets/assets/frontend/ # %s will be replaced by interpolated workspace in upload-rails-assets.yml
          WORKSPACE: ((workspace))
      - task: update-draft-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: frontend-image
        output_mapping:
         task-definition-arn: draft-task-definition-arn
        params:
         APPLICATION: frontend
         VARIANT: draft
      - task: update-live-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: frontend-image
        output_mapping:
         task-definition-arn: live-task-definition-arn
        params:
         APPLICATION: frontend
         VARIANT: live
    - in_parallel:
      - task: update-draft-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
         task-definition-arn: draft-task-definition-arn
        params:
         ECS_SERVICE: draft-frontend
         WORKSPACE: ((workspace))
      - task: update-live-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
         task-definition-arn: live-task-definition-arn
        params:
         ECS_SERVICE: frontend
         WORKSPACE: ((workspace))
    - in_parallel:
      - &await-secretsmanager-creds
        task: await-creds-in-secrets-manager
        file: govuk-infrastructure/concourse/tasks/await-creds-in-secretsmanager.yml
        attempts: 3
        params:
          APPLICATION: frontend
          VARIANT: live
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: frontend
          VARIANT: draft
    - in_parallel:
      - &await-deploy-complete
        task: await-deploy-complete-live
        file: govuk-infrastructure/concourse/tasks/await-deploy-complete.yml
        attempts: 4
        timeout: 5m
        params: &await-deploy-complete-params
          ECS_SERVICE: frontend
          WORKSPACE: ((workspace))
      - <<: *await-deploy-complete
        task: await-deploy-complete-draft
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: draft-frontend
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: smoke-test-frontend
    plan:
    - in_parallel:
        - <<: *get-smokey-govuk-infrastructure
          passed: [deploy-frontend]
        - get: frontend-terraform-outputs
          passed: [deploy-frontend]
          trigger: true
        - get: frontend-image
          passed: [deploy-frontend]
          trigger: true
        - <<: *get-smokey-app-tf-outputs
    - <<: *get-smokey-task-definition
    - <<: *run-smoke-test
      params:
        <<: *smoke-tests-params
        COMMAND: bundle exec cucumber --profile test --strict-undefined -t @app-frontend -t \"not @notreplatforming\"
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-publisher
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: publisher-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: publisher-image
        trigger: true
    - in_parallel:
      - task: bootstrap-secrets
        file: govuk-infrastructure/concourse/tasks/bootstrap-app-secrets.yml
        params:
          APPLICATION: publisher
          VARIANT: web
      - task: upload-rails-assets
        file: govuk-infrastructure/concourse/tasks/upload-rails-assets.yml
        input_mapping:
          app-image: publisher-image
        params:
          IMAGE_ASSETS_PATH: app-image/rootfs/app/public/assets/publisher
          S3_BUCKET_PATH_PATTERN: s3://govuk-test-%s-backends-rails-assets/assets/publisher/ # %s will be replaced by interpolated workspace in upload-rails-assets.yml
          WORKSPACE: ((workspace))
      - task: update-web-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: publisher-image
        output_mapping:
          task-definition-arn: web-task-definition-arn
        params:
          APPLICATION: publisher
          VARIANT: web
          GOVUK_ENVIRONMENT: test
      - task: update-worker-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: publisher-image
        output_mapping:
          task-definition-arn: worker-task-definition-arn
        params:
          APPLICATION: publisher
          VARIANT: worker
          GOVUK_ENVIRONMENT: test
    - in_parallel:
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: publisher
          VARIANT: web
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: publisher
          VARIANT: worker
    - task: run-db-migrations
      file: govuk-infrastructure/concourse/tasks/run-task.yml
      input_mapping:
        task-definition-arn: web-task-definition-arn
      params:
        APPLICATION: publisher
        COMMAND: "bundle exec rails db:migrate"
        VARIANT: web
        DISABLE: ((skip_db_migrations))
    - in_parallel:
      - task: update-web-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: web-task-definition-arn
        params:
          ECS_SERVICE: publisher-web
          WORKSPACE: ((workspace))
      - task: update-worker-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: worker-task-definition-arn
        params:
          ECS_SERVICE: publisher-worker
          WORKSPACE: ((workspace))
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-web
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: publisher-web
      - <<: *await-deploy-complete
        task: await-deploy-complete-worker
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: publisher-worker
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: smoke-test-publisher
    plan:
    - in_parallel:
        - <<: *get-smokey-govuk-infrastructure
          passed: [deploy-publisher]
        - get: publisher-terraform-outputs
          passed: [deploy-publisher]
          trigger: true
        - get: publisher-image
          passed: [deploy-publisher]
          trigger: true
        - <<: *get-smokey-app-tf-outputs
    - <<: *get-smokey-task-definition
    - <<: *run-smoke-test
      params:
        <<: *smoke-tests-params
        COMMAND: bundle exec cucumber --profile test --strict-undefined -t @app-publisher -t \"not @notreplatforming\"
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-publishing-api
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: publishing-api-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: publishing-api-image
        trigger: true
    - in_parallel:
      - task: bootstrap-secrets
        file: govuk-infrastructure/concourse/tasks/bootstrap-app-secrets.yml
        params:
          APPLICATION: publishing-api
          VARIANT: web
      - task: update-web-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: publishing-api-image
        output_mapping:
          task-definition-arn: web-task-definition-arn
        params:
          APPLICATION: publishing-api
          VARIANT: web
          GOVUK_ENVIRONMENT: test
      - task: update-worker-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: publishing-api-image
        output_mapping:
          task-definition-arn: worker-task-definition-arn
        params:
          APPLICATION: publishing-api
          VARIANT: worker
          GOVUK_ENVIRONMENT: test
    - in_parallel:
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: publishing-api
          VARIANT: web
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: publishing-api
          VARIANT: worker
    - task: run-db-migrations
      file: govuk-infrastructure/concourse/tasks/run-task.yml
      input_mapping:
        task-definition-arn: web-task-definition-arn
      params:
        APPLICATION: publishing-api
        COMMAND: "bundle exec rails db:migrate"
        VARIANT: web
        DISABLE: ((skip_db_migrations))
    - in_parallel:
      - task: update-web-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        params:
          ECS_SERVICE: publishing-api-web
          WORKSPACE: ((workspace))
        input_mapping:
          task-definition-arn: web-task-definition-arn
      - task: update-worker-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        params:
          ECS_SERVICE: publishing-api-worker
          WORKSPACE: ((workspace))
        input_mapping:
          task-definition-arn: worker-task-definition-arn
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-web
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: publishing-api-web
      - <<: *await-deploy-complete
        task: await-deploy-complete-worker
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: publishing-api-worker
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-content-store
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: content-store-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: content-store-image
        trigger: true
    - in_parallel:
      - task: bootstrap-secrets
        file: govuk-infrastructure/concourse/tasks/bootstrap-app-secrets.yml
        params:
          APPLICATION: content-store
          VARIANT: draft
      - task: bootstrap-secrets
        file: govuk-infrastructure/concourse/tasks/bootstrap-app-secrets.yml
        params:
          APPLICATION: content-store
          VARIANT: live
      - task: update-draft-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: content-store-image
        output_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          APPLICATION: content-store
          VARIANT: draft
      - task: update-live-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: content-store-image
        output_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          APPLICATION: content-store
          VARIANT: live
    - in_parallel:
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: content-store
          VARIANT: live
      - task: await-creds-in-secrets-manager
        file: govuk-infrastructure/concourse/tasks/await-creds-in-secretsmanager.yml
        params:
          APPLICATION: content-store
          VARIANT: draft
    - in_parallel:
      - task: update-live-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          ECS_SERVICE: content-store
          WORKSPACE: ((workspace))
      - task: update-draft-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          ECS_SERVICE: draft-content-store
          WORKSPACE: ((workspace))
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-live
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: content-store
      - <<: *await-deploy-complete
        task: await-deploy-complete-draft
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: draft-content-store
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-router
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: router-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: router-image
        trigger: true
    - in_parallel:
      - task: update-draft-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: router-image
        output_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          APPLICATION: router
          VARIANT: draft
      - task: update-live-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: router-image
        output_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          APPLICATION: router
          VARIANT: live
    - in_parallel:
      - task: update-draft-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          ECS_SERVICE: draft-router
          WORKSPACE: ((workspace))
      - task: update-live-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          ECS_SERVICE: router
          WORKSPACE: ((workspace))
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-draft
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: draft-router
      - <<: *await-deploy-complete
        task: await-deploy-complete-live
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: router
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-router-api
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        passed:
        trigger: true
      - get: app-terraform-outputs
        resource: router-api-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: router-api-image
        trigger: true
    - in_parallel:
      - <<: *await-secretsmanager-creds
        params:
          APPLICATION: router-api
          VARIANT: live
      - task: update-draft-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: router-api-image
        output_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          APPLICATION: router-api
          VARIANT: draft
      - task: update-live-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: router-api-image
        output_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          APPLICATION: router-api
          VARIANT: live
    - in_parallel:
      - task: update-draft-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          ECS_SERVICE: draft-router-api
          WORKSPACE: ((workspace))
      - task: update-live-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          ECS_SERVICE: router-api
          WORKSPACE: ((workspace))
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-draft
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: draft-router-api
      - <<: *await-deploy-complete
        task: await-deploy-complete-live
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: router-api
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-signon
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: signon-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: signon-image
        trigger: true
    - in_parallel:
      - task: upload-rails-assets
        file: govuk-infrastructure/concourse/tasks/upload-rails-assets.yml
        input_mapping:
          app-image: signon-image
        params:
          IMAGE_ASSETS_PATH: app-image/rootfs/app/public/assets/signon
          S3_BUCKET_PATH_PATTERN: s3://govuk-test-%s-backends-rails-assets/assets/signon/ # %s will be replaced by interpolated workspace in upload-rails-assets.yml
          WORKSPACE: ((workspace))
      - task: update-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        params:
          APPLICATION: signon
          GOVUK_ENVIRONMENT: test
          VARIANT: web
        input_mapping:
          app-image: signon-image
        output_mapping:
          task-definition-arn: task-definition-arn
    # TODO: Replace apiusers bootstrap task with api
    - task: make-bootstrap-command
      file: govuk-infrastructure/concourse/tasks/make-signon-bootstrap-command.yml
      params:
        GOVUK_ENVIRONMENT: test
        WORKSPACE: ((workspace))
    - task: create-signon-resources
      file: govuk-infrastructure/concourse/tasks/run-task.yml
      input_mapping:
        task-definition-arn: task-definition-arn
        run-task-command: run-task-command
      params:
        APPLICATION: signon
        VARIANT: web
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      input_mapping:
        task-definition-arn: task-definition-arn
      params:
        ECS_SERVICE: signon
        GOVUK_ENVIRONMENT: test
        WORKSPACE: ((workspace))
    - <<: *await-deploy-complete
      task: await-deploy-complete
      params:
        <<: *await-deploy-complete-params
        ECS_SERVICE: signon
    # todo: add bootstrap-oauth-api-users
    - task: bootstrap-oauth-apps
      file: govuk-infrastructure/concourse/tasks/bootstrap-oauth-apps.yml
      input_mapping:
        app-terraform-outputs: app-terraform-outputs
      params:
        APPLICATION: signon
        VARIANT: web
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: smoke-test-signon
    plan:
    - in_parallel:
        - <<: *get-smokey-govuk-infrastructure
          passed: [deploy-signon]
        - get: signon-terraform-outputs
          passed: [deploy-signon]
          trigger: true
        - get: signon-image
          passed: [deploy-signon]
          trigger: true
        - <<: *get-smokey-app-tf-outputs
    - <<: *get-smokey-task-definition
    - <<: *run-smoke-test
      params:
        <<: *smoke-tests-params
        COMMAND: bundle exec cucumber --profile test --strict-undefined -t @app-signon -t \"not @notreplatforming\"
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-smokey
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: smokey-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: smokey-image
        trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      input_mapping:
        app-image: smokey-image
      params:
        APPLICATION: smokey
        GOVUK_ENVIRONMENT: test
        VARIANT: default
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-static
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: static-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: static-image
        trigger: true
    - in_parallel:
      - task: upload-rails-assets
        file: govuk-infrastructure/concourse/tasks/upload-rails-assets.yml
        input_mapping:
          app-image: static-image
        params:
          IMAGE_ASSETS_PATH: app-image/rootfs/app/public/assets/static
          S3_BUCKET_PATH_PATTERN: s3://govuk-test-%s-frontends-rails-assets/assets/static/ # %s will be replaced by interpolated workspace in upload-rails-assets.yml
          WORKSPACE: ((workspace))
      - task: update-draft-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: static-image
        output_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          APPLICATION: static
          VARIANT: draft
      - task: update-live-task-definition
        file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
        input_mapping:
          app-image: static-image
        output_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          APPLICATION: static
          VARIANT: live
    - in_parallel:
      - task: update-draft-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: draft-task-definition-arn
        params:
          ECS_SERVICE: draft-static
          WORKSPACE: ((workspace))
      - task: update-live-ecs-service
        file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
        input_mapping:
          task-definition-arn: live-task-definition-arn
        params:
          ECS_SERVICE: static
          WORKSPACE: ((workspace))
    - in_parallel:
      - <<: *await-deploy-complete
        task: await-deploy-complete-live
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: static
      - <<: *await-deploy-complete
        task: await-deploy-complete-draft
        params:
          <<: *await-deploy-complete-params
          ECS_SERVICE: draft-static
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-authenticating-proxy
    plan:
    - in_parallel:
      - get: govuk-infrastructure
        resource: govuk-infrastructure-concourse-tasks
        trigger: true
      - get: app-terraform-outputs
        resource: authenticating-proxy-terraform-outputs
        passed:
        - run-terraform
        trigger: true
      - get: authenticating-proxy-image
        trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      input_mapping:
        app-image: authenticating-proxy-image
      output_mapping:
        task-definition-arn: task-definition-arn
      params:
        APPLICATION: authenticating-proxy
        VARIANT: web
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      input_mapping:
        task-definition-arn: task-definition-arn
      params:
        ECS_SERVICE: authenticating-proxy
        WORKSPACE: ((workspace))
    - <<: *await-deploy-complete
      task: await-deploy-complete-live
      params:
        <<: *await-deploy-complete-params
        ECS_SERVICE: authenticating-proxy
    serial: true
    on_failure:
      <<: *notify-slack-failure
