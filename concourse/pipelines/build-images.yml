---
definitions:

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest # TODO - don't use latest (once we've worked out a policy for third party images)
      username: ((docker_hub_username))
      password: ((docker_hub_authtoken))

resources:
  - &git-repo
    name: smokey-repo
    icon: github
    type: git
    source: &git-repo-source
      uri: git@github.com:alphagov/smokey.git
      branch: main
      private_key: | # pragma: allowlist secret
        ((govukci_private_key))

  - <<: *git-repo
    name: content-store-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/content-store.git
      branch: main

  - <<: *git-repo
    name: frontend-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/frontend.git

  - <<: *git-repo
    name: infra-concourse-task-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/govuk-infrastructure.git
      paths: [ docker/infra-concourse-task, Gemfile*, .ruby-version, concourse, lib, Rakefile ]

  - <<: *git-repo
    name: publisher-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/publisher.git

  - <<: *git-repo
    name: publishing-api-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/publishing-api.git
      branch: main

  - <<: *git-repo
    name: router-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/router.git
      branch: main

  - <<: *git-repo
    name: router-api-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/router-api.git

  - <<: *git-repo
    name: signon-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/signon.git

  - <<: *git-repo
    name: static-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/static.git

  - <<: *git-repo
    name: authenticating-proxy-repo
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/authenticating-proxy.git

  - <<: *git-repo
    name: govuk-infrastructure
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/govuk-infrastructure.git
      branch: main

  - <<: *git-repo
    name: govuk-infrastructure-govuk-terraform
    source:
      <<: *git-repo-source
      uri: git@github.com:alphagov/govuk-infrastructure.git
      branch: main
      paths: [ docker/images/govuk-terraform ]

  - &docker-image
    name: smokey-image
    type: registry-image
    icon: docker
    source: &docker-image-source
      repository: smokey
      tag: latest
      aws_region: ((concourse-ecr-user_aws-region))
      aws_access_key_id: ((concourse-ecr-user_aws-access-key))
      aws_secret_access_key: ((concourse-ecr-user_aws-secret-access-key))
      aws_role_arn: arn:aws:iam::((aws_production_account_id)):role/push_image_to_ecr_role

  - <<: *docker-image
    name: content-store-image
    source:
      <<: *docker-image-source
      repository: content-store
      tag: latest

  - <<: *docker-image
    name: frontend-image
    source:
      <<: *docker-image-source
      repository: frontend
      tag: latest

  - <<: *docker-image
    name: govuk-ruby-2.7.2
    source:
      <<: *docker-image-source
      repository: govuk-ruby-2.7.2
      tag: latest

  - <<: *docker-image
    name: govuk-ruby-2.7.3
    source:
      <<: *docker-image-source
      repository: govuk-ruby-2.7.3
      tag: latest

  - <<: *docker-image
    name: infra-concourse-task-image
    source:
      <<: *docker-image-source
      repository: infra-concourse-task

  - <<: *docker-image
    name: publisher-image
    source:
      <<: *docker-image-source
      repository: publisher
      tag: latest

  - <<: *docker-image
    name: publishing-api-image
    source:
      <<: *docker-image-source
      repository: publishing-api
      tag: latest

  - <<: *docker-image
    name: router-image
    source:
      <<: *docker-image-source
      repository: router
      tag: latest

  - <<: *docker-image
    name: router-api-image
    source:
      <<: *docker-image-source
      repository: router-api
      tag: latest

  - <<: *docker-image
    name: signon-image
    source:
      <<: *docker-image-source
      repository: signon
      tag: latest

  - <<: *docker-image
    name: static-image
    source:
      <<: *docker-image-source
      repository: static
      tag: latest

  - <<: *docker-image
    name: authenticating-proxy-image
    source:
      <<: *docker-image-source
      repository: authenticating-proxy
      tag: latest

  - <<: *docker-image
    name: govuk-terraform-image
    source:
      <<: *docker-image-source
      repository: govuk-terraform
      tag: latest

  - &semver-version
    name: smokey-version
    type: semver
    source: &semver-version-source
      driver: s3
      access_key_id: ((readonly_access_key_id))
      secret_access_key: ((readonly_secret_access_key))
      session_token: ((readonly_session_token))
      bucket: ((readonly_private_bucket_name))
      key: smokey-version
      region_name: eu-west-2
      initial_version: '1.0.5'

  - <<: *semver-version
    name: content-store-version
    source:
      <<: *semver-version-source
      key: content-store-version

  - <<: *semver-version
    name: frontend-version
    source:
      <<: *semver-version-source
      key: frontend-version

  - <<: *semver-version
    name: infra-concourse-task-version
    source:
      <<: *semver-version-source
      key: infra-concourse-task-version

  - <<: *semver-version
    name: publisher-version
    source:
      <<: *semver-version-source
      key: publisher-version

  - <<: *semver-version
    name: publishing-api-version
    source:
      <<: *semver-version-source
      key: publishing-api-version

  - <<: *semver-version
    name: router-version
    source:
      <<: *semver-version-source
      key: router-version

  - <<: *semver-version
    name: router-api-version
    source:
      <<: *semver-version-source
      key: router-api-version

  - <<: *semver-version
    name: signon-version
    source:
      <<: *semver-version-source
      key: signon-version

  - <<: *semver-version
    name: static-version
    source:
      <<: *semver-version-source
      key: static-version

  - <<: *semver-version
    name: authenticating-proxy-version
    source:
      <<: *semver-version-source
      key: authenticating-proxy-version

  - <<: *semver-version
    name: govuk-terraform-version
    source:
      <<: *semver-version-source
      key: govuk-terraform-proxy-version

  - name: ci-slack-channel
    type: slack-notification
    icon: bell-ring
    source:
      url: https://hooks.slack.com/services/((govuk_ci_slack_webhook))

jobs:
  - name: update-pipeline
    plan:
    - get: govuk-infrastructure
      trigger: true
    - file: govuk-infrastructure/concourse/pipelines/build-images.yml
      set_pipeline: build-images

  - name: smokey
    serial: true
    plan:
    - in_parallel:
      - get: smokey-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: smokey-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: smokey-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: smokey-image
      params:
        image: image/image.tar
        additional_tags: smokey-version/version
    - in_parallel:
      - put: smokey-repo
        params:
          only_tag: true
          tag: smokey-version/version
          repository: smokey-repo
      - put: smokey-version
        params:
          file: smokey-version/version
    on_failure: &notify-slack-failure
      put: ci-slack-channel
      params:
        channel: "#govuk-ci-alerts"
        username: 'build-images pipeline'
        icon_emoji: ':sad-docker:'
        silent: true
        text: |
          :red_circle: Failed build: http://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  - name: content-store
    serial: true
    plan:
    - in_parallel:
      - get: content-store-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: content-store-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: content-store-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: content-store-image
      params:
        image: image/image.tar
        additional_tags: content-store-version/version
    - in_parallel:
      - put: content-store-repo
        params:
          only_tag: true
          tag: content-store-version/version
          repository: content-store-repo
      - put: content-store-version
        params:
          file: content-store-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: frontend
    serial: true
    plan:
    - in_parallel:
      - get: frontend-repo
        trigger: true
      - get: govuk-ruby-2.7.3
        params:
          format: oci
        trigger: true
      - get: frontend-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: frontend-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: frontend-image
      params:
        image: image/image.tar
        additional_tags: frontend-version/version
    - in_parallel:
      - put: frontend-repo
        params:
          only_tag: true
          tag: frontend-version/version
          repository: frontend-repo
      - put: frontend-version
        params:
          file: frontend-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: infra-concourse-task
    serial: true
    plan:
    - in_parallel:
      - get: infra-concourse-task-repo
        trigger: true
      - get: infra-concourse-task-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: infra-concourse-task-repo
      params:
        DOCKERFILE: git-repo/docker/images/infra-concourse-task/Dockerfile
    - put: infra-concourse-task-image
      params:
        image: image/image.tar
        additional_tags: infra-concourse-task-version/version
    - in_parallel:
      - put: infra-concourse-task-repo
        params:
          only_tag: true
          tag_prefix: infra-concourse-task_
          tag: infra-concourse-task-version/version
          repository: infra-concourse-task-repo
      - put: infra-concourse-task-version
        params:
          file: infra-concourse-task-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: publisher
    serial: true
    plan:
    - in_parallel:
      - get: publisher-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: publisher-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: publisher-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: publisher-image
      params:
        image: image/image.tar
        additional_tags: publisher-version/version
    - in_parallel:
      - put: publisher-repo
        params:
          only_tag: true
          tag: publisher-version/version
          repository: publisher-repo
      - put: publisher-version
        params:
          file: publisher-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: publishing-api
    serial: true
    plan:
    - in_parallel:
      - get: publishing-api-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: publishing-api-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: publishing-api-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: publishing-api-image
      params:
        image: image/image.tar
        additional_tags: publishing-api-version/version
    - in_parallel:
      - put: publishing-api-repo
        params:
          only_tag: true
          tag: publishing-api-version/version
          repository: publishing-api-repo
      - put: publishing-api-version
        params:
          file: publishing-api-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: router
    serial: true
    plan:
    - in_parallel:
      - get: router-repo
        trigger: true
      - get: router-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: router-repo
    - put: router-image
      params:
        image: image/image.tar
        additional_tags: router-version/version
    - in_parallel:
      - put: router-repo
        params:
          only_tag: true
          tag: router-version/version
          repository: router-repo
      - put: router-version
        params:
          file: router-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: router-api
    serial: true
    plan:
    - in_parallel:
      - get: router-api-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: router-api-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: router-api-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: router-api-image
      params:
        image: image/image.tar
        additional_tags: router-api-version/version
    - in_parallel:
      - put: router-api-repo
        params:
          only_tag: true
          tag: router-api-version/version
          repository: router-api-repo
      - put: router-api-version
        params:
          file: router-api-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: signon
    serial: true
    plan:
    - in_parallel:
      - get: signon-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: signon-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: signon-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: signon-image
      params:
        image: image/image.tar
        additional_tags: signon-version/version
    - in_parallel:
      - put: signon-repo
        params:
          only_tag: true
          tag: signon-version/version
          repository: signon-repo
      - put: signon-version
        params:
          file: signon-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: static
    serial: true
    plan:
    - in_parallel:
      - get: static-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: static-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: static-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: static-image
      params:
        image: image/image.tar
        additional_tags: static-version/version
    - in_parallel:
      - put: static-repo
        params:
          only_tag: true
          tag: static-version/version
          repository: static-repo
      - put: static-version
        params:
          file: static-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: authenticating-proxy
    serial: true
    plan:
    - in_parallel:
      - get: authenticating-proxy-repo
        trigger: true
      - get: govuk-ruby-2.7.2
        params:
          format: oci
        trigger: true
      - get: authenticating-proxy-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
      - get: govuk-infrastructure
    - task: build-image
      privileged: true
      file: govuk-infrastructure/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: authenticating-proxy-repo
        base-image: govuk-ruby-2.7.2
      params:
        IMAGE_ARG_base_image: base-image/image.tar
    - put: authenticating-proxy-image
      params:
        image: image/image.tar
        additional_tags: authenticating-proxy-version/version
    - in_parallel:
      - put: authenticating-proxy-repo
        params:
          only_tag: true
          tag: authenticating-proxy-version/version
          repository: authenticating-proxy-repo
      - put: authenticating-proxy-version
        params:
          file: authenticating-proxy-version/version
    on_failure:
      <<: *notify-slack-failure

  - name: govuk-terraform
    serial: true
    plan:
    - in_parallel:
      - get: govuk-infrastructure-govuk-terraform
        trigger: true
      - get: govuk-terraform-version
        params:
          bump: minor
          pre_without_version: true
          pre: release
    - task: build-image
      privileged: true
      file: govuk-infrastructure-govuk-terraform/concourse/tasks/build-image-definition.yml
      input_mapping:
        git-repo: govuk-infrastructure-govuk-terraform
      params:
        DOCKERFILE: git-repo/docker/images/govuk-terraform/Dockerfile
    - put: govuk-terraform-image
      params:
        image: image/image.tar
        additional_tags: govuk-terraform-version/version
    - put: govuk-terraform-version
      params:
        file: govuk-terraform-version/version
    on_failure:
      <<: *notify-slack-failure
